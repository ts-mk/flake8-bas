name: Compatibility tests

on:
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * 1,5'

concurrency:
  group: tests-${{ github.ref }}
  cancel-in-progress: true

env:
  COVERAGE_RESULT: ./coverage.xml
  POETRY_VERSION: '1.3.2'
  PACKAGE_NAME: 'flake8_bas'
  SELF: tests.yml
  UTILS: ./.github/workflows/utils.py

jobs:
  compatibility:
    name: Test of the latest version of Flake8
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Dump workflow context
        uses: crazy-max/ghaction-dump-context@v1

      - name: Git checkout
        uses: actions/checkout@v3

      - name: Python setup
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Setup of a local directory
        run: mkdir ./.local

      - name: Virtualenvs cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ github.job }}-poetry-$${{ matrix.python }}${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ github.job }}-poetry-$${{ matrix.python }}-

      - name: Poetry installation
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Poetry setup
        run: |
          poetry config virtualenvs.create true
          poetry config experimental.new-installer false

      - name: Package installation
        run: |
          poetry add --lock "flake8"
          poetry install --remove-untracked --no-interaction --without dev,tests
          echo -e "\nFlake8 version: $(poetry run flake8 --version)"

      - name: Run (Python <3.10)
        if: matrix.python == '3.8' || matrix.python == '3.9'
        run: >-
          poetry run flake8 --isolated --select=BAS --exclude='*match*.py' ./tests/fixtures/*/* |
          poetry run ${{ env.UTILS }} assert-error-count --directory=./tests/fixtures/invalid --exclude='.*match.*'

      - name: Run (Python >=3.10)
        if: matrix.python != '3.8' && matrix.python != '3.9'
        run: >-
          poetry run flake8 --isolated --select=BAS ./tests/fixtures/*/* |
          poetry run ${{ env.UTILS }} assert-error-count --directory=./tests/fixtures/invalid
